# imports
import sqlite3

# Login Screen
def login_menu():
    print ("\n")
    # We gonna leave this line out for now, don't want keywords for people to find on Github lul
    print("Canada Rideshare Database System")
    print("========")
    print("A - Existing Users: Login")
    print("B - New Users: Create Account")
    print("C - Exit")
    print("========")
    print("Type A B or C and hit enter to select option")
    # Handles user menu choice
    while True:
        userInput = input("Function> ")
        if userInput.upper() in ('A','B', 'C'):
            return userInput.upper()
        else:
            print ("Input value not valid, please retry your option.")
            continue

#Prompt for username / password
def existing_user(conn):
    print ("\n")
    print ("Welcome returning user")
    print ("Please login with your account")
    print ("========")

    enteredEmail = input("Email> ")
    enteredPassword = input("Password> ")
    c = conn.cursor()
    c.execute("SELECT	*	FROM	members	WHERE	email=:try_email and	pwd=:try_password", {"try_email":enteredEmail,	"try_password":	enteredPassword})
    return c.fetchone()

def login_create(conn):
    print ("\n")
    print ("Welcome new user")
    print ("Please follow these steps to sign up for an account")
    print ("========")
    enteredName = input("Enter your full name> ")
    enteredPhone = input("Enter your phone number> ")
    enteredEmail = input("Enter your email address> ")
    enteredPassword = input("Choose a password> ")

    #TODO: regex motherfucker, make sure entered values make sense, phone should be ###-###-####, etc.
    c = conn.cursor()
    c.execute("INSERT INTO members VALUES(:email,:name, :phone,:password)", {"email":enteredEmail,	"phone":enteredPhone, "name":enteredName, "password":enteredPassword })
    conn.commit()

#
# MainA
#
def main():
    # Create Inital Database Connection
    conn = sqlite3.connect('./Database.db')


    # Allow the user to select their inital task
    while True:
        userInput = login_menu()
        if userInput == 'A':
            user = existing_user(conn)
            #if user is None:
            #TODO: run it again
            #else:
            #TODO: show user's inbox

        elif userInput == 'B':
            login_create(conn)
        elif userInput == 'C':
            break
        # Get associated information, connect to module.


if __name__ == "__main__":
    main()
